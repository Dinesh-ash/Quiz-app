{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinakaran\\\\Challenger\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Import useEffect\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css'; // Optional: Add custom styles for the login form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false); // State to track form validity\n\n  const navigate = useNavigate(); // Use navigate hook for redirection\n\n  // Function to handle input change and enable/disable the Quiz button\n  const handleInputChange = () => {\n    // Enable the button if both email and password are entered\n    if (email && password) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n  };\n  useEffect(() => {\n    handleInputChange(); // Call the function to check if form is valid on initial load or when email/password changes\n  }, [email, password]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(''); // Clear any previous messages\n    try {\n      const res = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', res.data.token); // Save the token\n      setMessage('Login Successful!');\n\n      // Redirect to the Quiz page after successful login\n      navigate('/quiz');\n    } catch (err) {\n      // Logging the error for debugging\n      console.error('Login Error:', err);\n\n      // Provide a more user-friendly error message\n      if (err.response) {\n        setMessage(`Error: ${err.response.data.message || 'Login failed!'}`);\n      } else if (err.request) {\n        setMessage('Error: No response from the server.');\n      } else {\n        setMessage(`Error: ${err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true,\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"login-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          disabled: !isFormValid || loading,\n          children: loading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"lZwuCkrJaFi1jWdU58x5P2Sjgg8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","message","setMessage","loading","setLoading","isFormValid","setIsFormValid","navigate","handleInputChange","handleLogin","e","preventDefault","res","post","localStorage","setItem","data","token","err","console","error","response","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Dinakaran/Challenger/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';  // Import useEffect\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css'; // Optional: Add custom styles for the login form\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isFormValid, setIsFormValid] = useState(false);  // State to track form validity\r\n\r\n    const navigate = useNavigate();  // Use navigate hook for redirection\r\n\r\n    // Function to handle input change and enable/disable the Quiz button\r\n    const handleInputChange = () => {\r\n        // Enable the button if both email and password are entered\r\n        if (email && password) {\r\n            setIsFormValid(true);\r\n        } else {\r\n            setIsFormValid(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleInputChange(); // Call the function to check if form is valid on initial load or when email/password changes\r\n    }, [email, password]);\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setMessage('');  // Clear any previous messages\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n            localStorage.setItem('token', res.data.token);  // Save the token\r\n            setMessage('Login Successful!');\r\n            \r\n            // Redirect to the Quiz page after successful login\r\n            navigate('/quiz');\r\n        } catch (err) {\r\n            // Logging the error for debugging\r\n            console.error('Login Error:', err);\r\n            \r\n            // Provide a more user-friendly error message\r\n            if (err.response) {\r\n                setMessage(`Error: ${err.response.data.message || 'Login failed!'}`);\r\n            } else if (err.request) {\r\n                setMessage('Error: No response from the server.');\r\n            } else {\r\n                setMessage(`Error: ${err.message}`);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-form\">\r\n                <h2 className=\"login-header\">Login</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        className=\"login-input\"\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        className=\"login-input\"\r\n                    />\r\n                    <button type=\"submit\" className=\"login-btn\" disabled={!isFormValid || loading}>\r\n                        {loading ? 'Logging in...' : 'Login'}\r\n                    </button>\r\n                    {message && <p className=\"login-message\">{message}</p>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}