{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddine\\\\Downloads\\\\quiz-app (1)\\\\quiz-app\\\\frontend\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(30); // Timer set to 30 seconds for each question\n  const [timerActive, setTimerActive] = useState(true); // Whether the timer is running\n  const [quizCompleted, setQuizCompleted] = useState(false); // State to track quiz completion\n\n  const navigate = useNavigate(); // Initialize navigate function for redirection\n\n  // Fetch the questions when the component mounts\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/quiz');\n        setQuestions(res.data);\n      } catch (err) {\n        console.error('Error fetching questions:', err);\n      }\n    };\n    fetchQuestions();\n  }, []);\n\n  // Start the timer when the component is loaded\n  useEffect(() => {\n    if (timerActive && timer > 0) {\n      const timerId = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n\n      // Clear the timer when the component is unmounted or the timer expires\n      return () => clearInterval(timerId);\n    }\n\n    // When timer reaches 0, go to next question\n    if (timer === 0) {\n      handleNextQuestion();\n    }\n  }, [timer, timerActive]);\n\n  // Handle answering a question\n  const handleAnswer = isCorrect => {\n    if (isCorrect) setScore(score + 1);\n    handleNextQuestion();\n  };\n\n  // Move to the next question\n  const handleNextQuestion = () => {\n    setTimer(30); // Reset the timer for the next question\n    setCurrentQuestion(currentQuestion + 1); // Go to the next question\n    setTimerActive(true); // Restart the timer\n  };\n\n  // Check if quiz is completed and navigate back to the landing page\n  useEffect(() => {\n    if (currentQuestion >= questions.length) {\n      setQuizCompleted(true);\n      // Display score for 10 seconds before redirecting to the home page\n      setTimeout(() => {\n        navigate('/'); // Redirect to home page after 10 seconds\n      }, 10000); // 10 seconds delay\n    }\n  }, [currentQuestion, questions.length, navigate]);\n\n  // Disable right-click (context menu) on quiz page\n  useEffect(() => {\n    const disableRightClick = e => {\n      e.preventDefault(); // Prevent the default right-click menu\n    };\n\n    // Add the event listener when the component mounts\n    document.addEventListener('contextmenu', disableRightClick);\n\n    // Cleanup: remove the event listener when the component unmounts\n    return () => {\n      document.removeEventListener('contextmenu', disableRightClick);\n    };\n  }, []);\n  if (!questions.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"timer\",\n        children: [\"Time Left: \", timer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-completion\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"quiz-header\",\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quiz-score\",\n        children: [\"Your score: \", score, \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Redirecting to home in 10 seconds...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"quiz-question\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz-options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"quiz-option\",\n          onClick: () => handleAnswer(index === questions[currentQuestion].correctOption),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(Quiz, \"TJzl7uhlUzi8+Y26UrOGKpAT3o8=\", false, function () {\n  return [useNavigate];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","score","setScore","timer","setTimer","timerActive","setTimerActive","quizCompleted","setQuizCompleted","navigate","fetchQuestions","res","get","data","err","console","error","timerId","setInterval","prevTimer","clearInterval","handleNextQuestion","handleAnswer","isCorrect","length","setTimeout","disableRightClick","e","preventDefault","document","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","options","map","option","index","onClick","correctOption","_c","$RefreshReg$"],"sources":["C:/Users/ddine/Downloads/quiz-app (1)/quiz-app/frontend/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './Quiz.css';\n\nconst Quiz = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [score, setScore] = useState(0);\n    const [timer, setTimer] = useState(30); // Timer set to 30 seconds for each question\n    const [timerActive, setTimerActive] = useState(true); // Whether the timer is running\n    const [quizCompleted, setQuizCompleted] = useState(false); // State to track quiz completion\n\n    const navigate = useNavigate(); // Initialize navigate function for redirection\n\n    // Fetch the questions when the component mounts\n    useEffect(() => {\n        const fetchQuestions = async () => {\n            try {\n                const res = await axios.get('http://localhost:5000/api/quiz');\n                setQuestions(res.data);\n            } catch (err) {\n                console.error('Error fetching questions:', err);\n            }\n        };\n        fetchQuestions();\n    }, []);\n\n    // Start the timer when the component is loaded\n    useEffect(() => {\n        if (timerActive && timer > 0) {\n            const timerId = setInterval(() => {\n                setTimer((prevTimer) => prevTimer - 1);\n            }, 1000);\n\n            // Clear the timer when the component is unmounted or the timer expires\n            return () => clearInterval(timerId);\n        }\n\n        // When timer reaches 0, go to next question\n        if (timer === 0) {\n            handleNextQuestion();\n        }\n    }, [timer, timerActive]);\n\n    // Handle answering a question\n    const handleAnswer = (isCorrect) => {\n        if (isCorrect) setScore(score + 1);\n        handleNextQuestion();\n    };\n\n    // Move to the next question\n    const handleNextQuestion = () => {\n        setTimer(30);  // Reset the timer for the next question\n        setCurrentQuestion(currentQuestion + 1);  // Go to the next question\n        setTimerActive(true); // Restart the timer\n    };\n\n    // Check if quiz is completed and navigate back to the landing page\n    useEffect(() => {\n        if (currentQuestion >= questions.length) {\n            setQuizCompleted(true);\n            // Display score for 10 seconds before redirecting to the home page\n            setTimeout(() => {\n                navigate('/'); // Redirect to home page after 10 seconds\n            }, 10000); // 10 seconds delay\n        }\n    }, [currentQuestion, questions.length, navigate]);\n\n    // Disable right-click (context menu) on quiz page\n    useEffect(() => {\n        const disableRightClick = (e) => {\n            e.preventDefault(); // Prevent the default right-click menu\n        };\n\n        // Add the event listener when the component mounts\n        document.addEventListener('contextmenu', disableRightClick);\n\n        // Cleanup: remove the event listener when the component unmounts\n        return () => {\n            document.removeEventListener('contextmenu', disableRightClick);\n        };\n    }, []);\n\n    if (!questions.length) return <p>Loading questions...</p>;\n\n    return (\n        <div className=\"quiz-container\">\n            <div className=\"quiz-header-container\">\n                <p className=\"timer\">Time Left: {timer}s</p>\n            </div>\n\n            {quizCompleted ? (\n                <div className=\"quiz-completion\">\n                    <h2 className=\"quiz-header\">Quiz Completed!</h2>\n                    <p className=\"quiz-score\">Your score: {score}/{questions.length}</p>\n                    <p>Redirecting to home in 10 seconds...</p>\n                </div>\n            ) : (\n                <>\n                    <h2 className=\"quiz-question\">{questions[currentQuestion].question}</h2>\n                    <div className=\"quiz-options\">\n                        {questions[currentQuestion].options.map((option, index) => (\n                            <button\n                                key={index}\n                                className=\"quiz-option\"\n                                onClick={() => handleAnswer(index === questions[currentQuestion].correctOption)}\n                            >\n                                {option}\n                            </button>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}